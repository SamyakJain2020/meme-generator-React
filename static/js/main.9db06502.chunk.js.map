{"version":3,"sources":["components/Card.jsx","components/Meme.jsx","App.js","index.js"],"names":["Card","data","setMeme","className","onClick","name","src","url","alt","Meme","meme","useState","template_id","id","username","password","boxes","form","setForm","Array","box_count","map","ele","type","placeholder","onChange","e","newBoxes","text","target","value","console","log","box","index","fetch","then","res","json","a","response","memes","App","datas","setDatas","useEffect","f","rel","href","crossorigin","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAYeA,EAXF,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,KAAKC,EAAa,EAAbA,QAChB,OAEI,sBAAKC,UAAU,OAAOC,QAAS,WAC/BF,EAAQD,IADR,UAGI,mCAAMA,EAAKI,KAAX,OACJ,qBAAKC,IAAKL,EAAKM,IAAKC,IAAI,S,eC4CjBC,EAhDF,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMR,EAAc,EAAdA,QAClB,EAAwBS,mBAAS,CAC7BC,YAAYF,EAAKG,GACjBC,SAAS,eACTC,SAAS,aACTC,MAAM,KAJV,mBAAOC,EAAP,KAAaC,EAAb,KAkBF,OACE,sBAAKf,UAAU,OAAf,UAEE,6BAAKO,EAAKL,OACV,qBAAKC,IAAKI,EAAKH,IAAKC,IAAI,KACxB,gCACG,YAAIW,MAAMT,EAAKU,YAAYC,KAAI,SAACC,EAAKT,GAAN,OAC9B,uBAAgBU,KAAK,OAAOC,YAAW,uBAAkBX,EAAK,GAAKY,SAC/D,SAACC,GACG,IAAMC,EAAUV,EAAKD,MACrBW,EAASd,GAAI,CAACe,KAAMF,EAAEG,OAAOC,OAC7BZ,EAAQ,2BAAID,GAAL,IAAUD,MAAMW,OAJnBd,MAQd,wBAAQT,QA3BX,WACI2B,QAAQC,IAAI,WACb,IAAIzB,EAAI,qDAAD,OAAsDU,EAAKL,YAA3D,sBAAoFK,EAAKH,SAAzF,sBAA+GG,EAAKF,SAApH,YACPE,EAAKD,MAAMK,KAAI,SAACY,EAAIC,GAChB3B,GAAK,UAAF,OAAY2B,EAAZ,mBAA4BD,EAAIL,SAEvCG,QAAQC,IAAI,QAAQzB,GACpB4B,MAAM5B,GAAK6B,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UAAQF,MAAK,SAAAnC,GAClC8B,QAAQC,IAAI/B,GACbC,EAAQ,2BAAIQ,GAAL,IAAUH,IAAIN,EAAKA,KAAKM,WAkBlC,yBACF,wBACEH,QAAS,WACPF,EAAQ,KAFZ,4B,4CClCN,WAAiBK,GAAjB,iBAAAgC,EAAA,sEACyBJ,MAAM5B,GAD/B,cACQiC,EADR,gBAEsBA,EAASF,OAF/B,cAESrC,EAFT,OAGG8B,QAAQC,IAAI/B,EAAKA,MAHpB,kBAIUA,EAAKA,KAAKwC,OAJpB,4C,sBA8BeC,MAvBf,WACE,MAA0B/B,mBAAS,IAAnC,mBAAOgC,EAAP,KAAcC,EAAd,KACA,EAAwBjC,mBAAS,IAAjC,mBAAOD,EAAP,KAAaR,EAAb,KAMA,OALA2C,qBAAU,Y,4CACPC,CAAE,qCACFV,KAAKQ,KACL,IAGD,qCACA,sBAAMG,IAAI,aAAaC,KAAK,iCAChC,sBAAMD,IAAI,aAAaC,KAAK,4BAA4BC,aAAW,IACnE,sBAAMD,KAAK,wEAAwED,IAAI,eACnF,gDACA,qBAAK5C,UAAU,aAAf,SACQ,KAAPO,EAAUiC,EAAMtB,KAAI,SAAApB,GAAI,OAAE,cAAC,EAAD,CAAMA,KAAMA,EAAMC,QAASA,OAAe,cAAC,EAAD,CAAMQ,KAAMA,EAAMR,QAASA,UCvBpGgD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.9db06502.chunk.js","sourcesContent":["import React from 'react'\r\nconst Card = ({data,setMeme}) => {\r\n    return (\r\n            \r\n        <div className=\"card\" onClick={()=>{\r\n        setMeme(data);\r\n    }}>\r\n            <h3> {data.name} </h3>\r\n        <img src={data.url} alt=\"\" />\r\n        </div>\r\n    )\r\n}\r\nexport default Card;\r\n","import React from \"react\";\r\nimport { useState } from 'react';\r\nimport \"../App.css\";\r\n\r\nconst Meme = ({ meme, setMeme }) => {\r\n    const [form, setForm] = useState({\r\n        template_id:meme.id,\r\n        username:\"samyakjain34\",\r\n        password:\"samyak2904\",\r\n        boxes:[]\r\n    })\r\n     function generate(){\r\n         console.log(\"clicked\")\r\n        let url=`https://api.imgflip.com/caption_image?template_id=${form.template_id}&&username=${form.username}&&password=${form.password}&&boxes=`;\r\n        form.boxes.map((box,index)=>{\r\n            url+=`&boxes[${index}][text]=${box.text}`;\r\n        })\r\n        console.log(\"url: \",url);\r\n        fetch(url).then(res=>res.json()).then(data=>{\r\n            console.log(data);\r\n           setMeme({...meme,url:data.data.url})\r\n        })\r\n    }\r\n  return (\r\n    <div className=\"meme\">\r\n    \r\n      <h1>{meme.name}</h1>\r\n      <img src={meme.url} alt=\"\" />\r\n      <div>\r\n        {[...Array(meme.box_count)].map((ele, id) => (\r\n          <input key={id} type=\"text\" placeholder={`Meme Caption:${id + 1}`} onChange={\r\n              (e)=>{\r\n                  const newBoxes= form.boxes;\r\n                  newBoxes[id]={text: e.target.value}\r\n                  setForm({...form,boxes:newBoxes})\r\n                }\r\n          }/>\r\n        ))}\r\n        <button onClick={generate}>Create Meme</button>\r\n      <button\r\n        onClick={() => {\r\n          setMeme(\"\");\r\n        }}\r\n      >\r\n        GO BACK\r\n      </button>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Meme;\r\n","import { useEffect,useState } from 'react';\nimport './App.css';\nimport Card from \"./components/Card\"\nimport Meme from \"./components/Meme\"\n\nasync function f(url){\n  const response = await fetch(url);\n   const data = await response.json();\n   console.log(data.data)\n   return data.data.memes;\n}\n\nfunction App() {\n  const [datas, setDatas] = useState([]);\n  const [meme, setMeme] = useState(\"\")  \n  useEffect(() => {\n     f('https://api.imgflip.com/get_memes')\n    .then(setDatas)\n  }, [])\n  // let url=\"https://api.imgflip.com/caption_image/87743020\"\n  return (\n    <>\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" / >\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin/>\n<link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@100&display=swap\" rel=\"stylesheet\"></link>\n    <h1>MEME GENERATOR</h1>\n    <div className=\"container2\"  >\n    {meme===\"\"?datas.map(data=><Card data={data} setMeme={setMeme} />) : <Meme meme={meme} setMeme={setMeme} />}\n    </div>\n    { }\n    \n    </>\n  );  \n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}